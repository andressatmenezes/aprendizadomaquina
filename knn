library(tidyverse)


D = tibble( x_1 = rnorm(100,1,1),
                x_2 = rnorm(100,-1,2),
                y = factor(sample(c("one","two","three"),100,replace = T)))
#test inputs
x = c(1.26007151, -3.33251570) #one
k=7
print(knn_algorithm(k,x,D))

knn_algorithm = function(k,x,D){
  #Setando as variáveis utilizadas
  v<- NULL
  i=1
  
  #Cria o vetor v, que contém os k elementos mais próximos de x
  while (i<=k){
    example <- (D[i,1:length(D)-1])
    euclidean <- sqrt(sum((example - x)^2))
    v <- c(v,euclidean)
    i=i+1
  }
  
  #Cria o vetor knn, que contém o índice da linha de cada elemento
  #mais próximo determinado por v
  knn <- order(v)
  
  #Cria um vetor somente com as classes
  class <- NULL
  j=1
  for (j in knn){
    
    class <- c(class,D[j,length(D)])
  }
  class <- unlist(class)
  
  #Verifica a classe através de contadores
  class1=0
  class2=0
  class3=0
  q=1
  while(q <= k){
    if(class[q]=="one"){
      class1=class1+1
      #print(q)
      #print("one")
    }
    if(class[q]=="two") {
      class2= class2+1
      #print(q)
      #print("two")
    }
    if(class[q]=="three"){
      class3= class3+1
      #print(q)
      #print("three")
    }
    q=q+1
  }
  
  #Comparação entre os contadores para definir a classe
  if(class1 > class2 && class1 > class3){
    return("one")
  }
  if(class2 > class1 && class2 > class3){
    return("two")
  }
  if(class3 > class1 && class3 > class2){
    return("three")
  }
}

